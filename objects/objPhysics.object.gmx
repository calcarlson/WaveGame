<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialise physics object

    //visual
    image_xscale = random_range(0.6, 0.7);
    image_yscale = image_xscale;
    scale = 0;
    scalespeed = 1/6;
    
    ang = 0;
    
    //physics
    xsp = 0;
    ysp = 0;
    grv = .6*image_xscale+((1*image_xscale)/2);
    
    //interaction
    lqd = 0;
    prvlqd = lqd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scale up when created

    if (scale &lt; 1)
    {
        scale += scalespeed;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///interact with liquid

    //find closest liquid box
    obj = instance_nearest_bbox(objLiquid);
    
    //check for collision
    if (obj)
    {
        //collide with liquid
        lqd = place_meeting(x, y, obj);
        if (lqd)
        {
             if (bbox_bottom &lt; liquid_point_y_precise(obj, x)) lqd = 0;
        }
        
        //if there's a change
        if (lqd != prvlqd)
        {
            if (prvlqd = 0)
            {
                //splash if needed
                if ((y &lt; (liquid_get_y(obj)+liquid_get_height(obj))) &amp;&amp; abs(ysp &gt; 2))
                {                    
                    //apply force to liquid
                    liquid_apply_force_radius(obj, x, 80*image_xscale, ysp*2)
                   
                    //change splash depending on proporties
                    var dcol, dblend, dalpha;
                    dcol = liquid_get_colour(obj, 1);
                    dalpha = liquid_get_alpha(obj, 1);
                    dblend = liquid_get_blend(obj);
                        
                    liquid_splash_create(obj, x, liquid_point_y_precise(obj, x), -abs(ysp/4), 19, 8, 16, 0.5, dcol, dalpha, dblend);
               audio_play_sound(splash,1,false)
                    //sound effect could go here
                }  
            }
            
            //realise current liquid state
            prvlqd = lqd;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///floating/sinking physics
    
    //find closest liquid box
    obj = instance_nearest_bbox(objLiquid);
    
    //float or sink depending on density
    if (lqd)
    {
        //let the object float
        var bcy, bnc;
        bcy = liquid_calculate_object_buoyancy(liquid_point_y_precise(obj, x), 1, y+(height*0.3), ysp, density, height, grv, 1);
        bnc = obj.liquidarray[floor(clamp((x-obj.x)/obj.liquidnodewidth, 0 , obj.liquidnodes-1)), 2]/2;
        ysp += bcy+bnc; 
        
        //find the 2 nearest nodes
        var sx, ny1, ny2;
        sx = clamp((x-obj.x)/obj.liquidnodewidth, 0 , obj.liquidnodes-1);
        ny1 = obj.liquidarray[floor(sx), 1]+obj.liquidarray[floor(sx), 3]+(4*dsin((floor(sx)*obj.liquidnodewidth)-(current_time/4)))//+obj.liquidarray[floor(sx), 3];
        ny2 = obj.liquidarray[ceil(sx), 1]+obj.liquidarray[ceil(sx), 3]+(4*dsin((ceil(sx)*obj.liquidnodewidth)-(current_time/4)))//+obj.liquidarray[ceil(sx), 3];

        //calculate angle to rock
        ang = point_direction(0, ny1, obj.liquidnodewidth, ny2);
        if (ang &gt; 270) ang -= 360;
        image_angle -= (image_angle-(ang/6))/6;
        
        //move side to side based on the angle
        x -= (image_angle/8);    
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

    if (scale = 1)
    {
        ysp += grv;
        y += ysp;
        
        if (y &gt; room_height+160) instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//drw object

    draw_sprite_ext(sprite_index, 0, x, y, image_xscale*scale, image_yscale*scale, image_angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
