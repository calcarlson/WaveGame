<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialise

    showtext = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialise other styles

    //styles
    previewstyle = 0;
    
    //glowing
    glowang = 0;
    glowspd = 1;
    glowsin = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update test variables for glowing

    //create sin value and manipulate for a 0 to 1 wobble
    glowang += glowspd;
    glowsin = (dsin(glowang)+1)/2; 
    
    //update liquid colours if lava
    if ((previewstyle mod 3) = 1)
    {
        liquid_set_colour(global.Liquid, merge_colour(c_white, c_yellow, glowsin), merge_colour(c_red, c_yellow, glowsin))
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///interaction
    
    //create object
    if (mouse_check_button_pressed(mb_left) &amp;&amp; global.Liquid)
    {
        instance_create(mouse_x, mouse_y, objSink);
    }
    
    //create object
    if (mouse_check_button_pressed(mb_right) &amp;&amp; global.Liquid)
    {
        instance_create(mouse_x, mouse_y, objFloat);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///manipulate propeties

    if (global.Liquid)
    {
        //change the tension
        var ten;
        ten = liquid_get_tension(global.Liquid);
        if (keyboard_check_pressed(vk_up)) liquid_set_tension(global.Liquid, ten+0.0005);
        if (keyboard_check_pressed(vk_down)) liquid_set_tension(global.Liquid, ten-0.0005);
        
        //change the dampening
        var dam;
        dam = liquid_get_dampening(global.Liquid);
        if (keyboard_check_pressed(vk_left)) liquid_set_dampening(global.Liquid, dam-0.0005);
        if (keyboard_check_pressed(vk_right)) liquid_set_dampening(global.Liquid, dam+0.0005);
        
        //change the spread
        var spr;
        spr = liquid_get_spread(global.Liquid);
        if (mouse_wheel_up()) liquid_set_spread(global.Liquid, spr+0.0005);
        if (mouse_wheel_down()) liquid_set_spread(global.Liquid, spr-0.0005);
        
        //change the passes
        var pas;
        pas = liquid_get_passes(global.Liquid);
        if (keyboard_check_pressed(ord("W"))) liquid_set_passes(global.Liquid, pas-1);
        if (keyboard_check_pressed(ord("E"))) liquid_set_passes(global.Liquid, pas+1);
        
        //change the nodes
        var nod;
        nod = liquid_get_nodes(global.Liquid);
        if (keyboard_check_pressed(ord("S"))) liquid_set_nodes(global.Liquid, nod-1);
        if (keyboard_check_pressed(ord("D"))) liquid_set_nodes(global.Liquid, nod+1);
        
        //change the bobbing
        var bobamt, bobscl, bobspd;
        bobamt = liquid_get_bobbing_amount(global.Liquid);
        bobscl = liquid_get_bobbing_scale(global.Liquid);
        bobspd = liquid_get_bobbing_speed(global.Liquid);
        if (keyboard_check_pressed(ord("Z"))) liquid_set_bobbing(global.Liquid, bobamt-1, bobscl, bobspd);
        if (keyboard_check_pressed(ord("X"))) liquid_set_bobbing(global.Liquid, bobamt+1, bobscl, bobspd);
        
        //change the jitter
        var jitamt, jitspd;
        jitamt = liquid_get_jitter_amount(global.Liquid);
        jitspd = liquid_get_jitter_speed(global.Liquid);
        if (keyboard_check_pressed(ord("T"))) liquid_set_jitter(global.Liquid, jitamt-1, jitspd);
        if (keyboard_check_pressed(ord("Y"))) liquid_set_jitter(global.Liquid, jitamt+1, jitspd);
        
        //toggle the surface
        if (keyboard_check_pressed(ord("G"))) liquid_set_surface(global.Liquid, !liquid_get_surface(global.Liquid));
    }
    
    //toggle the text
    if (keyboard_check_pressed(vk_delete)) showtext = !showtext;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cycle styles
        
    if (global.Liquid)
    {
        if (keyboard_check_pressed(vk_space))
        {
            previewstyle += 1;
            switch (previewstyle mod 3)
            {
                //water
                case 0:
                    test_set_water(global.Liquid);
                    break;
                //lava
                case 1:
                    test_set_lava(global.Liquid);
                    break;
                //oil
                case 2:
                    test_set_oil(global.Liquid);
                    break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///toggle text

    //toggle the text
    if (keyboard_check_pressed(vk_delete)) showtext = !showtext;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw debug hud

    if (!objTestDragLiquid.drg)
    {
        if (showtext)
        {
            if (global.Liquid)
            {
                var str;
                str = "FPS: "+string(fps)+
                "#Tension (Up/Down): "+string_format(global.Liquid.liquidtension, 1, 4)+
                "#Dampening (Left/Right): "+string_format(global.Liquid.liquiddampening, 1, 4)+
                "#Spread (Mouse Wheel): "+string_format(global.Liquid.liquidspread, 1, 4)+
                "#Passes (W/E): "+string(global.Liquid.liquidpasses)+
                "#Nodes (S/D): "+string(global.Liquid.liquidnodes)+
                "#Bobbing (Z/X): "+string(global.Liquid.liquidbobamount)+
                "#Jitter (T/Y): "+string(global.Liquid.liquidjitteramount)+
                "#Surface (G): "+string(global.Liquid.liquidsurface)+
                "##Left Click - Drop Heavy Object"+
                "#Right Click - Drop Light Object"+
                "#Space - Cycle Through Styles"+
                "#Enter - Reset";
                
                draw_set_halign(fa_left);
                draw_set_font(fntGui);
                draw_set_colour(c_dkgray);
                draw_text(4, 4, str);
            }
            else
            {
                var str1, str2, str3;
                str1 = "Waves";
                str2 = "Dynamic Fluid Simulation";
                str3 = "Click &amp; Drag To Create Liquid Block";
                
                draw_set_halign(fa_center);
                draw_set_colour(c_dkgray);
                
                draw_set_font(fntTitle);
                draw_text(room_width/2, 270, str1);  
                
                draw_set_font(fntSubtitle);
                draw_text(room_width/2, 380, str2);  
                
                draw_set_font(fntGui);
                draw_text(room_width/2, 450, str3);    
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset

    room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
